// This file is automatically generated. DO NOT EDIT.

package testkeys

import (
	"crypto/rsa"
    _ "embed"

    "github.com/tprasadtp/cryptokms/internal/cryptoutils"
)

//go:embed keys/rsa_{{.Size}}.key
var rsa{{.Size}}PrivateKeyPEM []byte

var rsa{{.Size}}PublicKeyPEM []byte
var rsa{{.Size}}PrivateKey *rsa.PrivateKey

//nolint:gochecknoinits // generated code
func init() {
    rsa{{.Size}}PrivateKey = cryptoutils.MustParseRSAPrivateKey(rsa{{.Size}}PrivateKeyPEM)
	rsa{{.Size}}PublicKeyPEM = cryptoutils.MustMarshalPublicKey(&rsa{{.Size}}PrivateKey.PublicKey)
}

// GetRSA{{.Size}}PrivateKey returns a known RSA{{.Size}} private key.
func GetRSA{{.Size}}PrivateKey() *rsa.PrivateKey {
    return rsa{{.Size}}PrivateKey
}

// GetRSA{{.Size}}PublicKey returns a known RSA{{.Size}} private key.
func GetRSA{{.Size}}PublicKey() *rsa.PublicKey {
    return &rsa{{.Size}}PrivateKey.PublicKey
}

// GetRSA{{.Size}}PublicKeyPEM returns a known RSA{{.Size}} public key in PEM format.
func GetRSA{{.Size}}PublicKeyPEM() []byte {
    return rsa{{.Size}}PublicKeyPEM
}
